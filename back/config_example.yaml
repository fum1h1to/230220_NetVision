#---------------------------------
# Serverの設定
#---------------------------------
# サーバのIPアドレス
SERVER_IP: 127.0.0.1

# サーバのポート番号
SERVER_PORT: 8080

# クライアント側のコンテンツの格納ディレクトリ
SERVER_CLIENT_CONTENT_PATH: ./html

# ブラウザを自動で起動させるかどうか
SERVER_AUTO_OPEN_BROWSER: true

#---------------------------------
# クライアント側アプリの設定
#---------------------------------
# 何時間ごとにアプリケーションをリロードするか
APPLICATION_RELOAD_INTERVAL: 24

# WebSocketの再接続間隔（ms）
WEBSOCKET_RECONNECT_INTERVAL: 10000


#---------------------------------
# GeoIPの設定
#---------------------------------
# GeoIPのデータベースをダウンロードしてきた後に出力するパス
GEOIP_DB_OUTPUT_PATH: "./resources/GeoIP"

# 自分でGeoIPを用意する場合のGeoIPのデータベースのパス（存在しなければ、ダウンロードされる）
GEOIP_DB_PATH:


#---------------------------------
# AbuseIPの設定
#---------------------------------
# Abuse IPDBを使用するかどうか
USE_ABUSE_IPDB: false

# Abuse IPDBのAPI KEY
ABUSE_IPDB_API_KEY: 

# 何時間おきにAbuseIPDBのブラックリストを更新するか
ABUSE_IPDB_UPDATE_DURATION: 24

# Abuse IPDBのblacklistファイルのパス（json形式）
ABUSE_IPDB_BLACKLIST_PATH: ./resources/AbuseIPDB/blacklist.json

# AbuseIPDBに登録されているIPアドレスの時の色
ABUSE_IPDB_PACKET_COLOR: 
  R: 255
  G: 0
  B: 0

# AbuseIPDBに登録されているIPアドレスだった時のパケットのmodelデータのファイル名（存在しない、または、空文字の場合は、デフォルトのモデルが使用される）
# html/models配下に格納する。ファイル形式は、glb形式, gltf形式のいずれか。
ABUSE_IPDB_MODEL_FILE_NAME: "packet-abuse.glb"

# AbuseIPからのパケットのConfidenceScoreがどの程度だったら色を変えるか（0~100）
ABUSE_IPDB_THRESHOLD_CONFIDENCE_SCORE: 50


#---------------------------------
# Spamhausの設定
#---------------------------------
# Spamhausを使用するかどうか
USE_SPAMHAUS: true

# Spamhausのデータをダウンロードしてきた後に出力するパス
SPAMHAUS_DATA_OUTPUT_PATH: "./resources/Spamhaus/"

# Spamhausに登録されているIPアドレスの時の色
SPAMHAUS_PACKET_COLOR: 
  R: 128
  G: 0
  B: 128

# Spamhausに登録されているIPアドレスだった時のパケットのmodelデータのファイル名。（存在しない、または、空文字の場合は、デフォルトのモデルが使用される）
# html/models配下に格納する。ファイル形式は、glb形式, gltf形式のいずれか。
SPAMHAUS_MODEL_FILE_NAME: "packet-spamhaus.glb"

# 何時間おきにSpamhausのDROPリストを更新するか
SPAMHAUS_UPDATE_DURATION: 24


#---------------------------------
# www.blocklist.deの設定
#---------------------------------
# www.blocklist.deを使用するかどうか
USE_BLOCKLIST_DE: true

# www.blocklist.deのデータをダウンロードしてきた後に出力するパス
BLOCKLIST_DE_DATA_OUTPUT_PATH: "./resources/blocklist-de/"

# www.blocklist.deに登録されているIPアドレスの色
BLOCKLIST_DE_PACKET_COLOR: 
  R: 255
  G: 255
  B: 0

# www.blocklist.deに登録されているIPアドレスだった時のパケットのmodelデータのファイル名。（存在しない、または、空文字の場合は、デフォルトのモデルが使用される）
# html/models配下に格納する。ファイル形式は、glb形式, gltf形式のいずれか。
BLOCKLIST_DE_MODEL_FILE_NAME: "packet-blocklistde.glb"

# 何時間おきにwww.blocklist.deのリストを更新するか
BLOCKLIST_DE_UPDATE_DURATION: 24


#---------------------------------
# ネットワーク周りの設定
#---------------------------------
# 可視化するネットワークインターフェース名（デフォルトはWifi）
TARGET_DEVICENAME:

# キャプチャする間隔。msで指定。
CAPTURE_DURATION: 1000

# CAPTURE_DURATIONの値の間に最大で取得するパケット数。超えた場合は破棄される。
PACKET_LIMIT_PER_CAPTURE_DURATION: 2000

# 自分自身からの通信を可視化するかどうか
VISIBLE_CAPTURE_MYSELF: false

# BPF フィルタ
BPF_FILTER: ""

# プロミスキャスモードを有効にするかどうか
PROMISCUOUS_MODE: true

# ---------- 見た目の設定 ----------
# 地球の半径
EARTH_RADIUS: 8

# 地球を回転させるかどうか
EARTH_ROTATE: false

# パケットの目的地
PACKET_GOAL: 
  lat: 35
  lng: 140

# クライアント側の最大パケット生成数
PACKET_LIMIT: 300

# パケットの軌道の高さ
PACKET_ORBIT_HEIGHT: 3

# パケットが目的地まで到達する時間
PACKET_GOAL_TIME: 5

# 一つのIPアドレスから一度に来るパケットの数をscaleで表現するときの最大値と、その時のpacketCountの大きさ
# 例えば、MAX_SCALE_PACKET_COUNTが100、MAX_PACKET_SCALEが10の時、packetCountが50のものはscaleが5になる。
MAX_PACKET_SCALE: 5
MAX_SCALE_PACKET_COUNT: 5

# デフォルトのパケットの色
DEFAULT_PACKET_COLOR: 
  R: 0
  G: 255
  B: 0

# パケットのmodelデータのファイル名。（存在しない、または、空文字の場合は、デフォルトのモデルが使用される）
# html/models配下に格納する。ファイル形式は、glb形式, gltf形式のいずれか。
DEFAULT_PACKET_MODEL_FILE_NAME: "packet-base.glb"

# パケット出現場所に表示するオブジェクトがどの程度の割合で大きくなるか
FLOW_COUNTER_HEIGHT_RATE: 0.01

# パケット出現場所に表示するオブジェクトの最大高さ
FLOW_COUNTER_MAX_HEIGHT: 5

# パケット出現場所に表示するオブジェクトの色
DEFAULT_FLOW_COUNTER_COLOR: 
  R: 0
  G: 0
  B: 255

# パケット出現場所に表示するオブジェクトをクリックした時の色
CLICKED_FLOW_COUNTER_COLOR: 
  R: 0
  G: 255
  B: 0
